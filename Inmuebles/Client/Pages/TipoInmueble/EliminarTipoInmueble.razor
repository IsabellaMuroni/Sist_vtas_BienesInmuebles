@page "/Tipo-Inmueble/EliminarTipoInmueble/{id:int}"
@inject NavigationManager NavigationManager
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Threading.Tasks


<h2>Eliminar Tipo Inmueble</h2>

<EditForm Model="@tipoInmuebleDelete">

    <div class="row g-3">
        <div class="col-12">
            <h3>¿Está seguro que desea eliminar...</h3>
        </div>
        <div class="col-md-6">
            <label for="id" class="form-label">ID</label>
            <input type="number" class="form-control" id="id" readonly @bind="tipoInmuebleDelete.Id_tipo_inmueble">
        </div>

        <div class="col-md-6">
            <label for="descripcion" class="form-label">Descripción Forma de Pago</label>
            <input type="text" class="form-control" id="descripcion" readonly @bind="tipoInmuebleDelete.Desc_inmueble">
        </div>

        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <button type="submit" class="btn btn-danger" @onclick="DeleteTipoInmueble">Eliminar</button>
            <button type="submit" class="btn btn-primary" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>

</EditForm>



@code {
    [Parameter]
    public int id { get; set; }

    private clientSwagger.Tipo_Inmueble tipoInmuebleDelete = new clientSwagger.Tipo_Inmueble();
    private clientSwagger.clientSwagger client = new clientSwagger.clientSwagger("https://localhost:7260/", new HttpClient());

    protected override async Task OnInitializedAsync()
    {
        tipoInmuebleDelete = await client.TipoInmueble2Async(id);
    }

    protected async Task DeleteTipoInmueble()
    {
        await client.TipoInmueble4Async(id);
        NavigationManager.NavigateTo("/Tipo-Inmueble");
    }

    protected void Cancelar()
    {
        NavigationManager.NavigateTo("/Tipo-Inmueble");
    }
}
